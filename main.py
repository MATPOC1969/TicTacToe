"""–ò–≥—Ä–∞ –¥–æ —Ç—Ä–µ—Ö –ø–æ–±–µ–¥ ‚Äî —Ä–µ–∞–ª–∏–∑—É–π —Å–∏—Å—Ç–µ–º—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –∏–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –¥–æ —Ç—Ä–µ—Ö –ø–æ–±–µ–¥ –æ–¥–Ω–æ–≥–æ –∏–∑ –∏–≥—Ä–æ–∫–æ–≤"""
from operator import truediv
import tkinter as tk
from tkinter import messagebox

# –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
window = tk.Tk()
window.title("üèÜ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏ - –î–æ 3 –ø–æ–±–µ–¥")
window.geometry("400x500")
window.configure(bg="#2c3e50")
window.resizable(False, False)

# –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–∫–Ω–∞
window.update_idletasks()
width = window.winfo_width()
height = window.winfo_height()
x = (window.winfo_screenwidth() // 2) - (width // 2)
y = (window.winfo_screenheight() // 2) - (height // 2)
window.geometry(f"{width}x{height}+{x}+{y}")

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–≥—Ä—ã
current_player = "X"
buttons = []
game_in_progress = False

# –°—á–µ—Ç —Ä–∞—É–Ω–¥–æ–≤
round_scores = {
    "X": 0,
    "O": 0
}

def check_winner():
    for i in range(3):
        if buttons[i][0]["text"] == buttons[i][1]["text"] == buttons[i][2]["text"] != "":
            return True
    for j in range(3):
        if buttons[0][j]["text"] == buttons[1][j]["text"] == buttons[2][j]["text"] != "":
            return True
    if buttons[0][0]["text"] == buttons[1][1]["text"] == buttons[2][2]["text"] != "":
        return True
    if buttons[0][2]["text"] == buttons[1][1]["text"] == buttons[2][0]["text"] != "":
        return True
    return False

def check_draw():
    for i in range(3):
        for j in range(3):
            if buttons[i][j]["text"] == "":
                return False
    return True

def reset_board():
    """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ"""
    global current_player, game_in_progress
    current_player = "X"
    game_in_progress = True
    
    for i in range(3):
        for j in range(3):
            buttons[i][j]["text"] = ""
            buttons[i][j]["state"] = "normal"
            buttons[i][j].configure(fg="black", font=("Arial", 40))
    
    current_player_label.config(text=f"üéØ –•–æ–¥ –∏–≥—Ä–æ–∫–∞: {current_player}")

def new_series():
    """–ù–∞—á–∏–Ω–∞–µ—Ç –Ω–æ–≤—É—é —Å–µ—Ä–∏—é –∏–≥—Ä"""
    global round_scores
    if messagebox.askyesno("–ù–æ–≤–∞—è —Å–µ—Ä–∏—è", "–ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Ä–∏—é –∏–≥—Ä? –¢–µ–∫—É—â–∏–π —Å—á–µ—Ç –±—É–¥–µ—Ç —Å–±—Ä–æ—à–µ–Ω."):
        round_scores = {"X": 0, "O": 0}
        update_score_display()
        reset_board()

def update_score_display():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—á–µ—Ç–∞"""
    x_score_label.config(text=f"üèÜ X: {round_scores['X']}")
    o_score_label.config(text=f"üèÜ O: {round_scores['O']}")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ª–∏–¥–µ—Ä–∞
    if round_scores['X'] > round_scores['O']:
        leader_label.config(text="üëë –õ–∏–¥–µ—Ä: X", fg="#e74c3c")
    elif round_scores['O'] > round_scores['X']:
        leader_label.config(text="üëë –õ–∏–¥–µ—Ä: O", fg="#f39c12")
    else:
        leader_label.config(text="‚öñÔ∏è –ù–∏—á—å—è", fg="#3498db")

def on_click(row, col):
    global current_player, game_in_progress
    
    if not game_in_progress:
        return
        
    if buttons[row][col]["text"] == "":
        buttons[row][col]["text"] = current_player
        
        # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏
        if current_player == "X":
            buttons[row][col].configure(fg="#e74c3c", font=("Arial", 36, "bold"))
        else:
            buttons[row][col].configure(fg="#f39c12", font=("Arial", 36, "bold"))
        
        if check_winner():
            # –ü–æ–±–µ–¥–∞ –≤ —Ä–∞—É–Ω–¥–µ
            round_scores[current_player] += 1
            update_score_display()
            
            game_in_progress = False
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∏–≥ –ª–∏ –∫—Ç–æ-—Ç–æ 3 –ø–æ–±–µ–¥
            if round_scores[current_player] >= 3:
                messagebox.showinfo("üéâ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø–æ–±–µ–¥–∞!", 
                                  f"–ò–≥—Ä–æ–∫ {current_player} –≤—ã–∏–≥—Ä–∞–ª —Å–µ—Ä–∏—é —Å–æ —Å—á–µ—Ç–æ–º {round_scores['X']}:{round_scores['O']}!")
                
                # –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
                for i in range(3):
                    for j in range(3):
                        buttons[i][j]["state"] = "disabled"
                
                # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Ä–∏—é
                if messagebox.askyesno("–ù–æ–≤–∞—è —Å–µ—Ä–∏—è", "–•–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Ä–∏—é –∏–≥—Ä?"):
                    new_series()
            else:
                messagebox.showinfo("üéØ –ü–æ–±–µ–¥–∞ –≤ —Ä–∞—É–Ω–¥–µ!", 
                                  f"–ò–≥—Ä–æ–∫ {current_player} –≤—ã–∏–≥—Ä–∞–ª —ç—Ç–æ—Ç —Ä–∞—É–Ω–¥!\n–°—á–µ—Ç: X - {round_scores['X']}, O - {round_scores['O']}")
                
                # –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
                for i in range(3):
                    for j in range(3):
                        buttons[i][j]["state"] = "disabled"
                
                # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–µ—Ä–∏—é
                if messagebox.askyesno("–°–ª–µ–¥—É—é—â–∏–π —Ä–∞—É–Ω–¥", "–ù–∞—á–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞—É–Ω–¥?"):
                    reset_board()
                    
        elif check_draw():
            # –ù–∏—á—å—è –≤ —Ä–∞—É–Ω–¥–µ
            game_in_progress = False
            messagebox.showinfo("ü§ù –ù–∏—á—å—è –≤ —Ä–∞—É–Ω–¥–µ!", "–≠—Ç–æ—Ç —Ä–∞—É–Ω–¥ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è –≤–Ω–∏—á—å—é!")
            
            # –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
            for i in range(3):
                for j in range(3):
                    buttons[i][j]["state"] = "disabled"
            
            # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–µ—Ä–∏—é
            if messagebox.askyesno("–°–ª–µ–¥—É—é—â–∏–π —Ä–∞—É–Ω–¥", "–ù–∞—á–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞—É–Ω–¥?"):
                reset_board()
        else:
            # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞—É–Ω–¥
            current_player = "O" if current_player == "X" else "X"
            current_player_label.config(text=f"üéØ –•–æ–¥ –∏–≥—Ä–æ–∫–∞: {current_player}")
    else:
        messagebox.showinfo("‚ö†Ô∏è –û—à–∏–±–∫–∞!", "–≠—Ç–∞ –∫–ª–µ—Ç–∫–∞ —É–∂–µ –∑–∞–Ω—è—Ç–∞!")

# –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
# –ó–∞–≥–æ–ª–æ–≤–æ–∫
title_label = tk.Label(
    window,
    text="üèÜ –î–û –¢–†–ï–• –ü–û–ë–ï–î",
    font=("Arial", 18, "bold"),
    bg="#2c3e50",
    fg="#ecf0f1"
)
title_label.pack(pady=10)

# –ü–∞–Ω–µ–ª—å —Å—á–µ—Ç–∞
score_frame = tk.Frame(window, bg="#34495e", relief="raised", bd=2)
score_frame.pack(fill="x", padx=10, pady=5)

# –°—á–µ—Ç –∏–≥—Ä–æ–∫–æ–≤
score_display_frame = tk.Frame(score_frame, bg="#34495e")
score_display_frame.pack(pady=10)

x_score_label = tk.Label(
    score_display_frame,
    text=f"üèÜ X: {round_scores['X']}",
    font=("Arial", 16, "bold"),
    bg="#34495e",
    fg="#e74c3c"
)
x_score_label.pack(side="left", padx=20)

vs_label = tk.Label(
    score_display_frame,
    text="VS",
    font=("Arial", 14, "bold"),
    bg="#34495e",
    fg="#ecf0f1"
)
vs_label.pack(side="left", padx=20)

o_score_label = tk.Label(
    score_display_frame,
    text=f"üèÜ O: {round_scores['O']}",
    font=("Arial", 16, "bold"),
    bg="#34495e",
    fg="#f39c12"
)
o_score_label.pack(side="left", padx=20)

# –õ–∏–¥–µ—Ä
leader_label = tk.Label(
    score_frame,
    text="‚öñÔ∏è –ù–∏—á—å—è",
    font=("Arial", 12, "bold"),
    bg="#34495e",
    fg="#3498db"
)
leader_label.pack(pady=5)

# –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
controls_frame = tk.Frame(window, bg="#2c3e50")
controls_frame.pack(pady=10)

new_round_button = tk.Button(
    controls_frame,
    text="üîÑ –ù–æ–≤—ã–π —Ä–∞—É–Ω–¥",
    font=("Arial", 12, "bold"),
    bg="#27ae60",
    fg="white",
    command=reset_board
)
new_round_button.pack(side="left", padx=5)

new_series_button = tk.Button(
    controls_frame,
    text="üèÅ –ù–æ–≤–∞—è —Å–µ—Ä–∏—è",
    font=("Arial", 12),
    bg="#e74c3c",
    fg="white",
    command=new_series
)
new_series_button.pack(side="left", padx=5)

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –∏–≥—Ä–æ–∫–µ
current_player_label = tk.Label(
    window,
    text="üéØ –•–æ–¥ –∏–≥—Ä–æ–∫–∞: X",
    font=("Arial", 14, "bold"),
    bg="#2c3e50",
    fg="#ecf0f1"
)
current_player_label.pack(pady=5)

# –ò–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ
game_frame = tk.Frame(window, bg="#2c3e50")
game_frame.pack(pady=10)

for i in range(3):
    row = []
    for j in range(3):
        button = tk.Button(
            game_frame,
            text="",
            font=("Arial", 32),
            width=4,
            height=2,
            bg="#34495e",
            fg="#ecf0f1",
            relief="raised",
            bd=3,
            command=lambda i=i, j=j: on_click(i, j)
        )
        button.grid(row=i, column=j, padx=3, pady=3)
        row.append(button)
    buttons.append(row)

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
instruction_label = tk.Label(
    window,
    text="üí° –ò–≥—Ä–∞–π—Ç–µ –¥–æ 3 –ø–æ–±–µ–¥! –ö–∞–∂–¥—ã–π —Ä–∞—É–Ω–¥ - —ç—Ç–æ –æ—Ç–¥–µ–ª—å–Ω–∞—è –∏–≥—Ä–∞ –≤ –∫—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏.",
    font=("Arial", 10),
    bg="#2c3e50",
    fg="#bdc3c7",
    wraplength=350
)
instruction_label.pack(pady=10)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
update_score_display()
reset_board()

window.mainloop()
