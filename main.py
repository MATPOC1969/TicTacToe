"""–°—á–µ—Ç—á–∏–∫ –ø–æ–±–µ–¥ ‚Äî –¥–æ–±–∞–≤—å —Å—á–µ—Ç—á–∏–∫ –ø–æ–±–µ–¥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ (—Å–∞–º–æ–µ –º–∞—Å—à—Ç–∞–±–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞)"""
from operator import truediv
import tkinter as tk
from tkinter import messagebox
import json
import os

# –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
window = tk.Tk()
window.title("üèÜ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏ - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
window.geometry("500x600")
window.configure(bg="#2c3e50")
window.resizable(False, False)

# –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–∫–Ω–∞
window.update_idletasks()
width = window.winfo_width()
height = window.winfo_height()
x = (window.winfo_screenwidth() // 2) - (width // 2)
y = (window.winfo_screenheight() // 2) - (height // 2)
window.geometry(f"{width}x{height}+{x}+{y}")

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–≥—Ä—ã
current_player = "X"
buttons = []
game_in_progress = False

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
stats = {
    "X_wins": 0,
    "O_wins": 0,
    "draws": 0,
    "total_games": 0,
    "current_streak": {"X": 0, "O": 0},
    "longest_streak": {"X": 0, "O": 0}
}

# –§–∞–π–ª –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
STATS_FILE = "tictactoe_stats.json"

def load_stats():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ —Ñ–∞–π–ª–∞"""
    global stats
    if os.path.exists(STATS_FILE):
        try:
            with open(STATS_FILE, 'r', encoding='utf-8') as f:
                stats = json.load(f)
        except:
            pass

def save_stats():
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ —Ñ–∞–π–ª"""
    try:
        with open(STATS_FILE, 'w', encoding='utf-8') as f:
            json.dump(stats, f, ensure_ascii=False, indent=2)
    except:
        pass

def update_stats_display():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    # –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    x_wins_label.config(text=f"üèÜ –ü–æ–±–µ–¥—ã X: {stats['X_wins']}")
    o_wins_label.config(text=f"üèÜ –ü–æ–±–µ–¥—ã O: {stats['O_wins']}")
    draws_label.config(text=f"ü§ù –ù–∏—á—å–∏: {stats['draws']}")
    total_games_label.config(text=f"üìä –í—Å–µ–≥–æ –∏–≥—Ä: {stats['total_games']}")
    
    # –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥
    if stats['total_games'] > 0:
        x_percent = (stats['X_wins'] / stats['total_games']) * 100
        o_percent = (stats['O_wins'] / stats['total_games']) * 100
        draw_percent = (stats['draws'] / stats['total_games']) * 100
        
        x_percent_label.config(text=f"({x_percent:.1f}%)")
        o_percent_label.config(text=f"({o_percent:.1f}%)")
        draw_percent_label.config(text=f"({draw_percent:.1f}%)")
    
    # –°–µ—Ä–∏–∏ –ø–æ–±–µ–¥
    x_streak_label.config(text=f"üî• –°–µ—Ä–∏—è X: {stats['current_streak']['X']}")
    o_streak_label.config(text=f"üî• –°–µ—Ä–∏—è O: {stats['current_streak']['O']}")
    x_longest_label.config(text=f"üèÖ –ú–∞–∫—Å. —Å–µ—Ä–∏—è X: {stats['longest_streak']['X']}")
    o_longest_label.config(text=f"üèÖ –ú–∞–∫—Å. —Å–µ—Ä–∏—è O: {stats['longest_streak']['O']}")

def reset_stats():
    """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –≤—Å—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    if messagebox.askyesno("–°–±—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏", "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É?"):
        global stats
        stats = {
            "X_wins": 0,
            "O_wins": 0,
            "draws": 0,
            "total_games": 0,
            "current_streak": {"X": 0, "O": 0},
            "longest_streak": {"X": 0, "O": 0}
        }
        save_stats()
        update_stats_display()

def new_game():
    """–ù–∞—á–∏–Ω–∞–µ—Ç –Ω–æ–≤—É—é –∏–≥—Ä—É"""
    global current_player, game_in_progress
    current_player = "X"
    game_in_progress = True
    
    # –û—á–∏—â–∞–µ–º –ø–æ–ª–µ
    for i in range(3):
        for j in range(3):
            buttons[i][j]["text"] = ""
            buttons[i][j]["state"] = "normal"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –∏–≥—Ä–æ–∫–µ
    current_player_label.config(text=f"üéØ –•–æ–¥ –∏–≥—Ä–æ–∫–∞: {current_player}")

def check_winner():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª—å"""
    for i in range(3):
        if buttons[i][0]["text"] == buttons[i][1]["text"] == buttons[i][2]["text"] != "":
            return True
    for j in range(3):
        if buttons[0][j]["text"] == buttons[1][j]["text"] == buttons[2][j]["text"] != "":
            return True
    if buttons[0][0]["text"] == buttons[1][1]["text"] == buttons[2][2]["text"] != "":
        return True
    if buttons[0][2]["text"] == buttons[1][1]["text"] == buttons[2][0]["text"] != "":
        return True
    return False

def check_draw():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∏—á—å—é"""
    for i in range(3):
        for j in range(3):
            if buttons[i][j]["text"] == "":
                return False
    return True

def update_streaks(winner):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–µ—Ä–∏–∏ –ø–æ–±–µ–¥"""
    if winner == "X":
        stats['current_streak']['X'] += 1
        stats['current_streak']['O'] = 0
        if stats['current_streak']['X'] > stats['longest_streak']['X']:
            stats['longest_streak']['X'] = stats['current_streak']['X']
    elif winner == "O":
        stats['current_streak']['O'] += 1
        stats['current_streak']['X'] = 0
        if stats['current_streak']['O'] > stats['longest_streak']['O']:
            stats['longest_streak']['O'] = stats['current_streak']['O']

def on_click(row, col):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ"""
    global current_player, game_in_progress
    
    if not game_in_progress:
        return
        
    if buttons[row][col]["text"] == "":
        buttons[row][col]["text"] = current_player
        
        # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏
        if current_player == "X":
            buttons[row][col].configure(fg="#e74c3c", font=("Arial", 36, "bold"))
        else:
            buttons[row][col].configure(fg="#f39c12", font=("Arial", 36, "bold"))
        
        if check_winner():
            # –ü–æ–±–µ–¥–∞
            stats[f'{current_player}_wins'] += 1
            stats['total_games'] += 1
            update_streaks(current_player)
            save_stats()
            update_stats_display()
            
            game_in_progress = False
            messagebox.showinfo("üéâ –ü–æ–±–µ–¥–∞!", f"–ò–≥—Ä–æ–∫ {current_player} –ø–æ–±–µ–¥–∏–ª!")
            
            # –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
            for i in range(3):
                for j in range(3):
                    buttons[i][j]["state"] = "disabled"
                    
        elif check_draw():
            # –ù–∏—á—å—è
            stats['draws'] += 1
            stats['total_games'] += 1
            stats['current_streak']['X'] = 0
            stats['current_streak']['O'] = 0
            save_stats()
            update_stats_display()
            
            game_in_progress = False
            messagebox.showinfo("ü§ù –ù–∏—á—å—è!", "–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –≤–Ω–∏—á—å—é!")
            
            # –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
            for i in range(3):
                for j in range(3):
                    buttons[i][j]["state"] = "disabled"
        else:
            # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏–≥—Ä—É
            current_player = "O" if current_player == "X" else "X"
            current_player_label.config(text=f"üéØ –•–æ–¥ –∏–≥—Ä–æ–∫–∞: {current_player}")
    else:
        messagebox.showinfo("‚ö†Ô∏è –û—à–∏–±–∫–∞!", "–≠—Ç–∞ –∫–ª–µ—Ç–∫–∞ —É–∂–µ –∑–∞–Ω—è—Ç–∞!")

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
load_stats()

# –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
# –ó–∞–≥–æ–ª–æ–≤–æ–∫
title_label = tk.Label(
    window,
    text="üèÜ –ö–†–ï–°–¢–ò–ö–ò-–ù–û–õ–ò–ö–ò",
    font=("Arial", 20, "bold"),
    bg="#2c3e50",
    fg="#ecf0f1"
)
title_label.pack(pady=10)

# –ü–∞–Ω–µ–ª—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
stats_frame = tk.Frame(window, bg="#34495e", relief="raised", bd=2)
stats_frame.pack(fill="x", padx=10, pady=5)

# –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
main_stats_frame = tk.Frame(stats_frame, bg="#34495e")
main_stats_frame.pack(pady=5)

x_wins_label = tk.Label(
    main_stats_frame,
    text=f"üèÜ –ü–æ–±–µ–¥—ã X: {stats['X_wins']}",
    font=("Arial", 12, "bold"),
    bg="#34495e",
    fg="#e74c3c"
)
x_wins_label.pack(side="left", padx=10)

x_percent_label = tk.Label(
    main_stats_frame,
    text="(0.0%)",
    font=("Arial", 10),
    bg="#34495e",
    fg="#bdc3c7"
)
x_percent_label.pack(side="left")

o_wins_label = tk.Label(
    main_stats_frame,
    text=f"üèÜ –ü–æ–±–µ–¥—ã O: {stats['O_wins']}",
    font=("Arial", 12, "bold"),
    bg="#34495e",
    fg="#f39c12"
)
o_wins_label.pack(side="left", padx=10)

o_percent_label = tk.Label(
    main_stats_frame,
    text="(0.0%)",
    font=("Arial", 10),
    bg="#34495e",
    fg="#bdc3c7"
)
o_percent_label.pack(side="left")

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
extra_stats_frame = tk.Frame(stats_frame, bg="#34495e")
extra_stats_frame.pack(pady=5)

draws_label = tk.Label(
    extra_stats_frame,
    text=f"ü§ù –ù–∏—á—å–∏: {stats['draws']}",
    font=("Arial", 11),
    bg="#34495e",
    fg="#3498db"
)
draws_label.pack(side="left", padx=10)

draw_percent_label = tk.Label(
    extra_stats_frame,
    text="(0.0%)",
    font=("Arial", 10),
    bg="#34495e",
    fg="#bdc3c7"
)
draw_percent_label.pack(side="left")

total_games_label = tk.Label(
    extra_stats_frame,
    text=f"üìä –í—Å–µ–≥–æ –∏–≥—Ä: {stats['total_games']}",
    font=("Arial", 11),
    bg="#34495e",
    fg="#2ecc71"
)
total_games_label.pack(side="left", padx=10)

# –°–µ—Ä–∏–∏ –ø–æ–±–µ–¥
streaks_frame = tk.Frame(stats_frame, bg="#34495e")
streaks_frame.pack(pady=5)

x_streak_label = tk.Label(
    streaks_frame,
    text=f"üî• –°–µ—Ä–∏—è X: {stats['current_streak']['X']}",
    font=("Arial", 10),
    bg="#34495e",
    fg="#e74c3c"
)
x_streak_label.pack(side="left", padx=5)

x_longest_label = tk.Label(
    streaks_frame,
    text=f"üèÖ –ú–∞–∫—Å. —Å–µ—Ä–∏—è X: {stats['longest_streak']['X']}",
    font=("Arial", 10),
    bg="#34495e",
    fg="#e74c3c"
)
x_longest_label.pack(side="left", padx=5)

o_streak_label = tk.Label(
    streaks_frame,
    text=f"üî• –°–µ—Ä–∏—è O: {stats['current_streak']['O']}",
    font=("Arial", 10),
    bg="#34495e",
    fg="#f39c12"
)
o_streak_label.pack(side="left", padx=5)

o_longest_label = tk.Label(
    streaks_frame,
    text=f"üèÖ –ú–∞–∫—Å. —Å–µ—Ä–∏—è O: {stats['longest_streak']['O']}",
    font=("Arial", 10),
    bg="#34495e",
    fg="#f39c12"
)
o_longest_label.pack(side="left", padx=5)

# –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
controls_frame = tk.Frame(window, bg="#2c3e50")
controls_frame.pack(pady=10)

new_game_button = tk.Button(
    controls_frame,
    text="üÜï –ù–æ–≤–∞—è –∏–≥—Ä–∞",
    font=("Arial", 12, "bold"),
    bg="#27ae60",
    fg="white",
    command=new_game
)
new_game_button.pack(side="left", padx=5)

reset_stats_button = tk.Button(
    controls_frame,
    text="üóëÔ∏è –°–±—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É",
    font=("Arial", 12),
    bg="#e74c3c",
    fg="white",
    command=reset_stats
)
reset_stats_button.pack(side="left", padx=5)

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –∏–≥—Ä–æ–∫–µ
current_player_label = tk.Label(
    window,
    text="üéØ –•–æ–¥ –∏–≥—Ä–æ–∫–∞: X",
    font=("Arial", 14, "bold"),
    bg="#2c3e50",
    fg="#ecf0f1"
)
current_player_label.pack(pady=5)

# –ò–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ
game_frame = tk.Frame(window, bg="#2c3e50")
game_frame.pack(pady=10)

for i in range(3):
    row = []
    for j in range(3):
        button = tk.Button(
            game_frame,
            text="",
            font=("Arial", 32),
            width=4,
            height=2,
            bg="#34495e",
            fg="#ecf0f1",
            relief="raised",
            bd=3,
            command=lambda i=i, j=j: on_click(i, j)
        )
        button.grid(row=i, column=j, padx=3, pady=3)
        row.append(button)
    buttons.append(row)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
update_stats_display()
new_game()

window.mainloop()
