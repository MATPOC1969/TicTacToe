
"""–í—ã–±–æ—Ä –¥–ª—è –∏–≥—Ä–æ–∫–∞ ‚Äî –¥–æ–±–∞–≤—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞—Ç—å, —á–µ–º –±—É–¥–µ—Ç –∏–≥—Ä–∞—Ç—å –∏–≥—Ä–æ–∫ (–∫—Ä–µ—Å—Ç–∏–∫–æ–º –∏–ª–∏ –Ω–æ–ª–∏–∫–æ–º), –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –∏–≥—Ä—ã–£–ª—É—á—à–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ ‚Äî –ø–æ—Ä–∞–±–æ—Ç–∞–π –Ω–∞–¥ –¥–∏–∑–∞–π–Ω–æ–º –∏–≥—Ä—ã, —Å–¥–µ–ª–∞–π –µ—ë –±–æ–ª–µ–µ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–π –∏ —É–¥–æ–±–Ω–æ–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

–í–∞—Ä–∏–∞–Ω—Ç –Ω–∏—á—å–µ–π ‚Äî –µ—Å–ª–∏ –≤—Å–µ –∫–ª–µ—Ç–∫–∏ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã, –Ω–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–π —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∏—á—å–µ–π
–î–æ–±–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Å–±—Ä–æ—Å–∞ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É –±–µ–∑ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã"""




from operator import truediv
import tkinter as tk
from tkinter import messagebox
from tkinter import ttk


# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–≥—Ä—ã
current_player = "X"
buttons = []
player_symbol = "X"  # –°–∏–º–≤–æ–ª –∏–≥—Ä–æ–∫–∞
computer_symbol = "O"  # –°–∏–º–≤–æ–ª –∫–æ–º–ø—å—é—Ç–µ—Ä–∞

def show_symbol_selection():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Å–∏–º–≤–æ–ª–∞ –¥–ª—è –∏–≥—Ä–æ–∫–∞"""
    global player_symbol, computer_symbol
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ
    dialog = tk.Toplevel()
    dialog.title("–í—ã–±–æ—Ä —Å–∏–º–≤–æ–ª–∞")
    dialog.geometry("300x200")
    dialog.resizable(False, False)
    dialog.transient(window)  # –î–µ–ª–∞–µ–º –¥–∏–∞–ª–æ–≥ –º–æ–¥–∞–ª—å–Ω—ã–º
    dialog.grab_set()  # –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Ñ–æ–∫—É—Å
    
    # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –¥–∏–∞–ª–æ–≥
    dialog.update_idletasks()
    x = (dialog.winfo_screenwidth() // 2) - (300 // 2)
    y = (dialog.winfo_screenheight() // 2) - (200 // 2)
    dialog.geometry(f"300x200+{x}+{y}")
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    title_label = tk.Label(dialog, text="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–∏–º–≤–æ–ª:", font=("Arial", 14, "bold"))
    title_label.pack(pady=20)
    
    # –§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ X
    def choose_x():
        global player_symbol, computer_symbol
        player_symbol = "X"
        computer_symbol = "O"
        dialog.destroy()
        start_game()
    
    # –§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ O
    def choose_o():
        global player_symbol, computer_symbol
        player_symbol = "O"
        computer_symbol = "X"
        dialog.destroy()
        start_game()
    
    # –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞
    button_frame = tk.Frame(dialog)
    button_frame.pack(pady=20)
    
    x_button = tk.Button(
        button_frame,
        text="X (–ö—Ä–µ—Å—Ç–∏–∫)",
        font=("Arial", 16, "bold"),
        width=8,
        height=2,
        command=choose_x
    )
    x_button.pack(side="left", padx=10)
    
    o_button = tk.Button(
        button_frame,
        text="O (–ù–æ–ª–∏–∫)",
        font=("Arial", 16, "bold"),
        width=8,
        height=2,
        command=choose_o
    )
    o_button.pack(side="left", padx=10)
    
    # –ñ–¥–µ–º –∑–∞–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞
    dialog.wait_window()

def start_game():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–≥—Ä—É –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —Å–∏–º–≤–æ–ª–∞"""
    global current_player
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞ (–≤—Å–µ–≥–¥–∞ X –Ω–∞—á–∏–Ω–∞–µ—Ç)
    current_player = "X"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤—ã–±–æ—Ä–µ
    window.title(f"–ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏ - –í—ã –∏–≥—Ä–∞–µ—Ç–µ –∑–∞ {player_symbol}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±–æ—Ä–µ
    info_label = tk.Label(
        window,
        text=f"–í—ã –∏–≥—Ä–∞–µ—Ç–µ –∑–∞: {player_symbol} | –ö–æ–º–ø—å—é—Ç–µ—Ä –∏–≥—Ä–∞–µ—Ç –∑–∞: {computer_symbol}",
        font=("Arial", 10),
        fg="blue"
    )
    info_label.grid(row=0, column=0, columnspan=3, pady=5)


def check_winner():
    for i in range(3):
        if buttons[i][0]["text"] == buttons[i][1]["text"] == buttons[i][2]["text"] != "":
            return True
    for j in range(3):
        if buttons[0][j]["text"] == buttons[1][j]["text"] == buttons[2][j]["text"] != "":
            return True
    if buttons[0][0]["text"] == buttons[1][1]["text"] == buttons[2][2]["text"] != "":
        return True
    if buttons[0][2]["text"] == buttons[1][1]["text"] == buttons[2][0]["text"] != "":
        return True
    return False

def check_draw():
    for i in range(3):
        for j in range(3):
            if buttons[i][j]["text"] == "":
                return False
    return True

def on_click(row, col):
    global current_player, move_count
    if buttons[row][col]["text"] == "":
        buttons[row][col]["text"] = current_player
        

        if check_winner():
            winner = "–í—ã" if current_player == player_symbol else "–ö–æ–º–ø—å—é—Ç–µ—Ä"
            messagebox.showinfo("–ü–æ–±–µ–¥–∞!", f"{winner} –ø–æ–±–µ–¥–∏–ª!")
            window.quit()
        elif check_draw():
            messagebox.showinfo("–ù–∏—á—å—è!", "–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –≤–Ω–∏—á—å—é!")
            window.quit()
        else:
            current_player = "O" if current_player == "X" else "X"

    else:
        messagebox.showinfo("‚ö†Ô∏è –û—à–∏–±–∫–∞!", "–≠—Ç–∞ –∫–ª–µ—Ç–∫–∞ —É–∂–µ –∑–∞–Ω—è—Ç–∞!")

# –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
title_frame = tk.Frame(window, bg=COLORS["title_bg"], height=80)
title_frame.pack(fill="x", padx=10, pady=(10, 5))

title_label = tk.Label(
    title_frame,
    text="üéÆ –ö–†–ï–°–¢–ò–ö–ò-–ù–û–õ–ò–ö–ò",
    font=("Arial", 20, "bold"),
    bg=COLORS["title_bg"],
    fg=COLORS["title_fg"]
)
title_label.pack(expand=True)

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å
info_frame = tk.Frame(window, bg=COLORS["bg"])
info_frame.pack(fill="x", padx=10, pady=5)

player_label = tk.Label(
    info_frame,
    text=f"–•–æ–¥ –∏–≥—Ä–æ–∫–∞: {current_player}",
    font=("Arial", 14, "bold"),
    bg=COLORS["bg"],
    fg=COLORS["button_fg"]
)
player_label.pack(side="left")


move_label = tk.Label(
    info_frame,
    text="–•–æ–¥: 0",
    font=("Arial", 12),
    bg=COLORS["bg"],
    fg=COLORS["button_fg"]
)
move_label.pack(side="right")

# –ò–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ
game_frame = tk.Frame(window, bg=COLORS["bg"])
game_frame.pack(pady=20)


# –°–æ–∑–¥–∞–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ
for i in range(3):
    row = []
    for j in range(3):


        button = tk.Button(
            game_frame,
            text="",
            font=("Arial", 32),
            width=4,
            height=2,
            bg=COLORS["button_bg"],
            fg=COLORS["button_fg"],
            relief="raised",
            bd=3,
            command=lambda i=i, j=j: on_click(i, j)
        )
        button.grid(row=i, column=j, padx=3, pady=3)
        row.append(button)
    buttons.append(row)

# –ü–∞–Ω–µ–ª—å —Å –ø–æ–¥—Å–∫–∞–∑–∫–∞–º–∏
hint_frame = tk.Frame(window, bg=COLORS["bg"])
hint_frame.pack(fill="x", padx=10, pady=10)

hint_label = tk.Label(
    hint_frame,
    text="üí° –ö–ª–∏–∫–∞–π—Ç–µ –ø–æ –∫–ª–µ—Ç–∫–∞–º, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Ö–æ–¥",
    font=("Arial", 10),
    bg=COLORS["bg"],
    fg=COLORS["button_fg"]
)
hint_label.pack()

# –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã


window.mainloop()
